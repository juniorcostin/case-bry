version: 0.2
phases:
  install:
    commands:
      # instalando kubectl
      - curl -O $KUBECTL_URL
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$HOME/bin:$PATH

  pre_build:
    commands:
      # Iniciando login no AWS CLI
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY && aws configure set aws_secret_access_key $AWS_SECRET_KEY && aws configure set default.region $AWS_REGIAO

      # Iniciando login no AWS ECR
      - aws ecr get-login-password --region $AWS_REGIAO | docker login --username AWS --password-stdin $AWS_ECR_ID_CONTA.dkr.ecr.$AWS_REGIAO.amazonaws.com

      # Configurando Kubeconfig do Kubernetes
      - pwd
      - cp ./aws/config /home/ubuntu/.kube/config
      
  build:
    commands:
      # Iniciando Build da Imagem Docker
      - docker build -t $AWS_ECR_ID_CONTA.dkr.ecr.$AWS_REGIAO.amazonaws.com/$AWS_ECR_NOME_REPO:$CODEBUILD_BUILD_NUMBER .

      # Iniciando Push da Imagem para o AWS ECR
      - docker push $AWS_ECR_ID_CONTA.dkr.ecr.$AWS_REGIAO.amazonaws.com/$AWS_ECR_NOME_REPO:$CODEBUILD_BUILD_NUMBER

      # Atualizando Versao Deployment Kubernetes
      - 'sed -i "s/{{tag}}/$CODEBUILD_BUILD_NUMBER/g" ./k8s/deployment.yaml'

      # Removendo Sercret ECR Login do Kubernetes
      - kubectl delete secret ecr-$K8S_NAMESPACE --namespace $K8S_NAMESPACE

      # Adicionando nova Secret ECR Login do Kubernetes 
      - kubectl create secret docker-registry ecr-$K8S_NAMESPACE --docker-server=$AWS_ECR_ID_CONTA.dkr.ecr.$AWS_REGIAO.amazonaws.com   --docker-username=AWS   --docker-password=$(aws ecr get-login-password)   --namespace $K8S_NAMESPACE

      # Iniciando Deploy Kubernetes
      - kubectl apply -f ./k8s/deployment.yaml --namespace $K8S_NAMESPACE
      - kubectl apply -f ./k8s/services.yaml --namespace $K8S_NAMESPACE
      
  post_build:
    commands: